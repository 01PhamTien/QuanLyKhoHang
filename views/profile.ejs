<%- include('partials/head') %>
<%- include('partials/header') %>
<link rel="stylesheet" href="/stylesheets/profile.css">
<style>
  body {
    background-color: #e6f7ff;
    min-height: 100vh;
    color: #333;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  }

  .container {
    padding: 2rem;
    animation: fadeIn 0.6s ease-out;
  }

  .form-card {
    border: none;
    border-radius: 15px;
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    padding: 1.5rem;
  }

  .form-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
  }

  .card-header {
    background: linear-gradient(90deg, #0066cc, #00a3ff);
    color: #fff;
    padding: 1.5rem;
    border-radius: 15px 15px 0 0;
  }

  .form-control {
    border-radius: 8px;
    border: 1px solid #a7c7e7;
    padding: 12px 15px;
    transition: all 0.3s ease;
  }

  .form-control:focus {
    border-color: #0066cc;
    box-shadow: 0 0 10px rgba(102, 179, 255, 0.5);
    transform: scale(1.02);
    outline: none;
  }

  .btn-primary {
    background: linear-gradient(90deg, #0066cc, #00a3ff);
    border: none;
    border-radius: 8px;
    color: #fff;
    padding: 8px 16px;
    font-weight: 600;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
  }

  .btn-primary:hover {
    background: linear-gradient(90deg, #004aad, #0066cc);
    box-shadow: 0 0 15px rgba(102, 179, 255, 0.5);
    transform: translateY(-3px);
  }

  .btn-primary:active::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    background: rgba(255, 255, 255, 0.3);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    animation: ripple 0.6s ease-out;
  }

  .btn-outline-primary {
    border: 1px solid #a7c7e7;
    color: #0066cc;
    border-radius: 8px;
    padding: 6px 12px;
    transition: all 0.3s ease;
  }

  .btn-outline-primary:hover {
    background: #a7c7e7;
    color: #fff;
    box-shadow: 0 0 10px rgba(102, 179, 255, 0.5);
  }

  .avatar-selection img {
    cursor: pointer;
    border: 2px solid transparent;
    border-radius: 50%;
    width: 80px;
    height: 80px;
    margin: 5px;
    transition: border-color 0.3s ease, transform 0.3s ease;
  }

  .avatar-selection img:hover {
    transform: scale(1.1);
  }

  .avatar-selection img.selected {
    border-color: #0066cc;
    box-shadow: 0 0 10px rgba(102, 179, 255, 0.5);
  }

  #avatarList {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease-out;
    margin-top: 1rem;
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  #avatarList.show {
    max-height: 500px;
    transition: max-height 0.5s ease-in;
  }

  .list-group-item {
    border: none;
    padding: 0.75rem 0;
    background: transparent;
  }

  .list-group-item strong {
    color: #333;
    font-weight: 600;
  }

  .text-muted {
    color: #666 !important;
  }

  .text-secondary {
    color: #6c757d !important;
  }

  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(20px); }
    to { opacity: 1; transform: translateY(0); }
  }

  @keyframes ripple {
    to {
      width: 200px;
      height: 200px;
      opacity: 0;
    }
  }

  @media (max-width: 768px) {
    .container {
      padding: 1rem;
    }

    .form-card {
      padding: 1rem;
    }

    .card-header {
      padding: 1rem;
    }

    .form-control {
      font-size: 0.9rem;
      padding: 10px 12px;
    }

    .btn-primary,
    .btn-outline-primary {
      padding: 6px 12px;
      font-size: 0.9rem;
    }

    .avatar-selection img {
      width: 60px;
      height: 60px;
    }

    #currentAvatar {
      width: 60px;
      height: 60px;
    }
  }
</style>

<div class="container mt-5">
  <div class="row justify-content-center">
    <div class="col-md-8">
      <div class="card form-card">
        <div class="card-header">
          <h3 class="mb-0"><i class="fas fa-user-circle me-2"></i>Hồ sơ cá nhân</h3>
        </div>
        <div class="card-body">
          <div class="d-flex align-items-center mb-4">
            <img id="currentAvatar" src="/images/avatars/<%= user.avatar || 'avatar1.png' %>" alt="Avatar" class="rounded-circle me-3" width="80" height="80">
            <div>
              <h4 class="mb-0"><%= user.username %></h4>
              <p class="text-muted mb-0"><%= user.email %></p>
              <small class="text-secondary">Vai trò: 
                <% if(user.role === 'admin') { %>
                  Quản trị viên
                <% } else if(user.role === 'warehouse_manager') { %>
                  Quản lý kho
                <% } else if(user.role === 'manager') { %>
                  Quản lý
                <% } else { %>
                  Người dùng
                <% } %>
              </small>
              <button id="toggleAvatarList" class="btn btn-outline-primary btn-sm mt-2" type="button">
                <i class="fas fa-image me-1"></i>Chọn avatar
              </button>
            </div>
          </div>
          <div id="avatarList" class="avatar-selection">
            <% for(let i=1; i<=9; i++) { %>
              <img src="/images/avatars/avatar<%= i %>.png" alt="Avatar <%= i %>" data-avatar="avatar<%= i %>.png" class="<%= user.avatar === 'avatar' + i + '.png' ? 'selected' : '' %>">
            <% } %>
          </div>
          <hr>
          <h5>Giới thiệu</h5>
          <textarea id="introductionInput" class="form-control" rows="4" placeholder="Nhập thông tin giới thiệu..."><%= user.introduction || '' %></textarea>
          <button id="saveIntroductionBtn" class="btn btn-primary mt-2">
            <i class="fas fa-save me-1"></i>Lưu giới thiệu
          </button>
          <hr>
          <h5>Thông tin chi tiết</h5>
          <ul class="list-group list-group-flush">
            <li class="list-group-item"><strong>Ngày tạo tài khoản:</strong> <%= new Date(user.createdAt).toLocaleDateString('vi-VN') %></li>
            <li class="list-group-item"><strong>Ngày cập nhật gần nhất:</strong> <%= new Date(user.updatedAt).toLocaleDateString('vi-VN') %></li>
          </ul>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const avatarImages = document.querySelectorAll('.avatar-selection img');
    const currentAvatar = document.getElementById('currentAvatar');
    const toggleAvatarListBtn = document.getElementById('toggleAvatarList');
    const avatarList = document.getElementById('avatarList');

    avatarList.classList.remove('show');

    toggleAvatarListBtn.addEventListener('click', () => {
      avatarList.classList.toggle('show');
    });

    avatarImages.forEach(img => {
      img.addEventListener('click', async () => {
        avatarImages.forEach(i => i.classList.remove('selected'));
        img.classList.add('selected');
        currentAvatar.src = img.src;

        try {
          const response = await fetch('/profile/avatar', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ avatar: img.dataset.avatar })
          });
          const data = await response.json();
          if (!response.ok) {
            alert('Lỗi khi cập nhật avatar: ' + (data.error || 'Không xác định'));
          }
        } catch (error) {
          alert('Lỗi khi gửi yêu cầu cập nhật avatar');
          console.error(error);
        }
      });
    });

    const introductionInput = document.getElementById('introductionInput');
    const saveIntroductionBtn = document.getElementById('saveIntroductionBtn');

    saveIntroductionBtn.addEventListener('click', async () => {
      const introduction = introductionInput.value.trim();
      try {
        const response = await fetch('/profile/introduction', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ introduction })
        });
        const data = await response.json();
        if (response.ok) {
          alert('Cập nhật giới thiệu thành công');
        } else {
          alert('Lỗi khi cập nhật giới thiệu: ' + (data.error || 'Không xác định'));
        }
      } catch (error) {
        alert('Lỗi khi gửi yêu cầu cập nhật giới thiệu');
        console.error(error);
      }
    });
  });
</script>

<%- include('partials/footer') %>