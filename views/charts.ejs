<!DOCTYPE html>
<html lang="vi">
<head>
  <%- include('partials/head') %>
  <title>Biểu đồ thống kê</title>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <style>
    .chart-container {
      width: 80%;
      margin: 20px auto;
    }
    .chart-box {
      background: white;
      border-radius: 8px;
      box-shadow: 0 0 10px rgba(0,0,0,0.1);
      padding: 20px;
      margin-bottom: 30px;
    }
  </style>
</head>
<body>
  <%- include('partials/header') %>

  <div class="container">
    <h1 class="my-4">Biểu đồ thống kê</h1>

    <div class="chart-box">
      <h3>Thống kê tổng quan</h3>
      <div class="chart-container">
        <canvas id="statsChart"></canvas>
      </div>
    </div>

    <div class="chart-box">
      <h3>Biểu đồ kho</h3>
      <div class="chart-container">
        <canvas id="inventoryChart"></canvas>
      </div>
    </div>

    <div class="chart-box">
      <h3>Biểu đồ bán hàng</h3>
      <div class="chart-container">
        <canvas id="salesChart"></canvas>
      </div>
    </div>

    <div class="chart-box">
      <h3>Top sản phẩm</h3>
      <div class="chart-container">
        <canvas id="productsChart"></canvas>
      </div>
    </div>
  </div>

  <script>
    // Hàm tạo biểu đồ
    async function createCharts() {
      try {
        // Lấy dữ liệu từ API
        const [stats, inventory, sales, products] = await Promise.all([
          fetch('/charts/stats').then(res => res.json()),
          fetch('/charts/inventory').then(res => res.json()),
          fetch('/charts/sales').then(res => res.json()),
          fetch('/charts/products').then(res => res.json())
        ]);

        // Biểu đồ thống kê tổng quan
        new Chart(
          document.getElementById('statsChart'),
          {
            type: 'bar',
            data: {
              labels: ['Tổng sản phẩm', 'Tổng số lượng', 'Giá nhập TB'],
              datasets: [{
                label: 'Thống kê kho',
                data: [
                  stats.inventoryStats.totalProducts,
                  stats.inventoryStats.totalQuantity,
                  stats.inventoryStats.avgPrice
                ],
                backgroundColor: [
                  'rgba(54, 162, 235, 0.5)',
                  'rgba(75, 192, 192, 0.5)',
                  'rgba(255, 159, 64, 0.5)'
                ],
                borderColor: [
                  'rgb(54, 162, 235)',
                  'rgb(75, 192, 192)',
                  'rgb(255, 159, 64)'
                ],
                borderWidth: 1
              }]
            }
          }
        );

        // Biểu đồ kho
        new Chart(
          document.getElementById('inventoryChart'),
          {
            type: 'doughnut',
            data: {
              labels: ['Tổng số lượng', 'Tổng giá trị'],
              datasets: [{
                data: [inventory.data.totalQuantity, inventory.data.totalValue],
                backgroundColor: [
                  'rgba(255, 99, 132, 0.5)',
                  'rgba(54, 162, 235, 0.5)'
                ],
                borderColor: [
                  'rgb(255, 99, 132)',
                  'rgb(54, 162, 235)'
                ],
                borderWidth: 1
              }]
            }
          }
        );

        // Biểu đồ bán hàng
        new Chart(
          document.getElementById('salesChart'),
          {
            type: 'line',
            data: {
              labels: sales.data.map(item => item._id),
              datasets: [{
                label: 'Số lượng bán',
                data: sales.data.map(item => item.totalQuantity),
                fill: false,
                borderColor: 'rgb(75, 192, 192)',
                tension: 0.1
              }]
            }
          }
        );

        // Biểu đồ sản phẩm
        new Chart(
          document.getElementById('productsChart'),
          {
            type: 'bar',
            data: {
              labels: products.data.map(item => item.name),
              datasets: [{
                label: 'Số lượng tồn kho',
                data: products.data.map(item => item.quantity),
                backgroundColor: 'rgba(153, 102, 255, 0.5)',
                borderColor: 'rgb(153, 102, 255)',
                borderWidth: 1
              }]
            }
          }
        );

      } catch (error) {
        console.error('Lỗi khi tạo biểu đồ:', error);
      }
    }

    // Gọi hàm tạo biểu đồ khi trang tải xong
    document.addEventListener('DOMContentLoaded', createCharts);
  </script>

  <%- include('partials/footer') %>
</body>
</html>
